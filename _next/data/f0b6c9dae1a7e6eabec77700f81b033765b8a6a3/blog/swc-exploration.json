{"pageProps":{"slug":"swc-exploration","meta":{"title":"Exploring SWC as esbuild Alternative","description":"Comparing with esbuild and list out current issues / edge cases for swc.","published":"April 10, 2021"},"content":"<h1 id=\"exploring-swc-as-esbuild-alternative\">Exploring SWC as esbuild Alternative<a href=\"#exploring-swc-as-esbuild-alternative\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\">🔗</span></a></h1>\n<p>Published on April 10, 2021</p>\n<hr>\n<h2 id=\"table-of-contents\">Table of Contents<a href=\"#table-of-contents\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\">🔗</span></a></h2>\n<ul>\n<li>\n<p><a href=\"#introduction\">Introduction</a></p>\n</li>\n<li>\n<p><a href=\"#older-browsers-support\">Older Browsers Support</a></p>\n</li>\n<li>\n<p><a href=\"#discovered-issues\">Discovered Issues</a></p>\n<ul>\n<li><a href=\"#export-default-is-not-evaluated\">Export default is not evaluated</a></li>\n<li><a href=\"#current-state-of-swc\">Current state of SWC</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#conclusion\">Conclusion</a></p>\n</li>\n</ul>\n<h2 id=\"introduction\">Introduction<a href=\"#introduction\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\">🔗</span></a></h2>\n<p>In the last <a href=\"/blog/esbuild-exporation\">blog</a>, we have talked about how to use esbuild programmatically in order to boost your build time performance. Not to forget about babel, a lot of transformations that we are not aware of using it in babel, might not be supported in either esbuild or swc.</p>\n<p>Also a bit disclaimer about using these new build tools written in go / rust, they are <strong>not fully stable yet</strong>. Although they are actively being developed, try to be extra careful when you decide to use this on production!</p>\n<p>What I am going to discuss in this blog is about some edge cases you should know before even using swc.</p>\n<h2 id=\"older-browsers-support\">Older Browsers Support<a href=\"#older-browsers-support\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\">🔗</span></a></h2>\n<p>Discussing about older browsers, you might want to ship your code in <strong>es5</strong> format. Babel has <a href=\"https://babeljs.io/docs/en/babel-preset-env\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">preset-env</a> which actually transpiles all es5+ syntax to be compatible with es5.</p>\n<p>As mentioned in the previous <a href=\"/blog/esbuild-exporation\">blog</a>, esbuild currently does not support es5 syntax transformations. For safety, you can try esbuild for bundling server code instead.</p>\n<p>On the other hand, SWC (what we are going to talk about it in this blog), does support ES5 syntax transformations. Personally I haven't found any weird issue with its es5 syntax transformations prior writing this blog, when trying it out in a large codebase. Set the target to <code>es5</code> and if you want, you can explore about <a href=\"https://swc.rs/docs/preset-env/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">swc preset-env</a>.</p>\n<h2 id=\"discovered-issues\">Discovered Issues<a href=\"#discovered-issues\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\">🔗</span></a></h2>\n<h3 id=\"export-default-is-not-evaluated\">Export default is not evaluated<a href=\"#export-default-is-not-evaluated\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\">🔗</span></a></h3>\n<p>This is a quite interesting thing I just discovered during my years in Frontend development 😅.\nWe have a file called <code>get.js</code>, let's take a look about the original code here:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// code here</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>And here's the result from transpiling using SWC:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">'__esModule'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// code here</span>\n<span class=\"token punctuation\">}</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span> <span class=\"token operator\">=</span> get<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>What do you think would happen if another place import this file? Let's say there is <code>index.js</code> that actually re-export <code>get.js</code> file.</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">'__esModule'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  enumerable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> _get<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">'set'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  enumerable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> _set<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">'del'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  enumerable<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> _del<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> _get <span class=\"token operator\">=</span> <span class=\"token function\">_interopRequireDefault</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./get'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> _set <span class=\"token operator\">=</span> <span class=\"token function\">_interopRequireDefault</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./set'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> _del <span class=\"token operator\">=</span> <span class=\"token function\">_interopRequireDefault</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./del'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> _default <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  get<span class=\"token operator\">:</span> _get<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span><span class=\"token punctuation\">,</span>\n  set<span class=\"token operator\">:</span> _set<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span><span class=\"token punctuation\">,</span>\n  del<span class=\"token operator\">:</span> _del<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span> <span class=\"token operator\">=</span> _default<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>If you try to console <code>_default</code> object, it will result in:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  get<span class=\"token operator\">:</span> <span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">,</span>\n  set<span class=\"token operator\">:</span> fn<span class=\"token punctuation\">,</span>\n  del<span class=\"token operator\">:</span> fn<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Or even scarier, I bundled these as 3rd party library with webpack, resulting in with this error:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token known-class-name class-name\">TypeError</span><span class=\"token operator\">:</span> undefinedundefined is not defined\n</code></pre></div>\n<p>What happened here? I honestly didn't know until I read about this <a href=\"https://github.com/webpack/webpack/issues/7767\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">spec from webpack</a>.</p>\n<p><strong>Lessons learned:</strong></p>\n<ol>\n<li>\n<p>When writing a 3rd party library, we need to be extremely careful by knowing how other bundler works. Especially webpack and rollup, they might have different specs in mind. This is only just one example that things could go very wrong!</p>\n</li>\n<li>\n<p>Babel might already be aware about this issue, or we just got off lucky. Babel will transpile into following which actually does the evaluation beforehand:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">'__esModule'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span> <span class=\"token operator\">=</span> get<span class=\"token punctuation\">;</span> <span class=\"token comment\">// exports function first</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// code here</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ol>\n<hr>\n<p>To conclude this issue, the safest code when exporting a function is:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// code here</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> get<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>Which will transpile to:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">defineProperty</span><span class=\"token punctuation\">(</span>exports<span class=\"token punctuation\">,</span> <span class=\"token string\">'__esModule'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">void</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// code here</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> _default <span class=\"token operator\">=</span> get<span class=\"token punctuation\">;</span> <span class=\"token comment\">// evaluate the function first</span>\nexports<span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span> <span class=\"token operator\">=</span> _default<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"current-state-of-swc\">Current state of SWC<a href=\"#current-state-of-swc\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\">🔗</span></a></h3>\n<p>So I've been writing a swc plugin for emotion that behaves similarly as <a href=\"https://github.com/emotion-js/emotion/tree/master/packages/babel-plugin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">babel-emotion-plugin</a>.</p>\n<p>SWC plugin as of this blog was written, is highly unstable. See this <a href=\"https://github.com/swc-project/swc/issues/785\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">issue</a>, even the example plugin is not working. But since it has already been patched, I decided to give it a try as well.</p>\n<p>Below are the edge cases that I stumbled upon writing a plugin in version <code>1.2.51</code></p>\n<ol>\n<li>\n<p>If you are writing your syntax in commonjs, you must be aware that the <code>Visitor</code> class is exported as default. So you need to import it differently:</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">Visitor</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@swc/core/Visitor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword module\">default</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EmotionStyledTransformer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Visitor</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">visitCallExpression</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// code</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> emotionPlugin <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EmotionStyledTransformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> emotionPlugin<span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Plugin does not work with <code>transformFile</code>, you need to use <code>transformFileSync</code> as alternative. Otherwise, it will give you weird <code>Unexpected token o in JSON</code> error. This is probably a mishandled logic problem in <code>@swc/core</code>, specifically in <code>parseFile</code> method (please do correct me if I am wrong here). It is actually doing <code>JSON.parse(&#x3C;Promise>)</code> 👻</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transformFileSync <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@swc/core'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword control-flow\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">transformFileSync</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    plugin<span class=\"token operator\">:</span> <span class=\"token function\">plugins</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>emotionPlugin<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">visitProgram</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bind</span><span class=\"token punctuation\">(</span>emotionPlugin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token spread operator\">...</span>swcOptions<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">throw</span> error<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p>You might encounter error like <code>visitTsType method is not implemented</code>. I'm not sure about this, but it seems you can't use plugin together with a typescript file that specifies the typings.</p>\n</li>\n</ol>\n<h2 id=\"conclusion\">Conclusion<a href=\"#conclusion\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon icon-link\">🔗</span></a></h2>\n<p>Well, it is how it is. SWC is more alpha version of Babel, so please be extra careful when migrating specifically a large codebase from Babel.</p>\n<p>Despite encoutered the issues above, this trial was quite fun, I also have discovered about hidden webpack spec that I wasn't aware of ✌️.</p>\n<p>Now let's wait for the exciting future: <strong>esbuild fully supports es5</strong> or <strong>SWC is stabilized</strong>.</p>\n<hr>\n"},"__N_SSG":true}